<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>Tic Tac Toe</title>
    <style>
      body {
        font-family: sans-serif;
        background-color: #eee;
      }

      .container {
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
      }

      .board {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 10px;
        width: 100%;
        margin: 0 auto 20px;
        border: 5px solid black;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3);
      }

      .square {
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 50px;
        background-color: #fff;
        border-right: 5px solid black;
        border-bottom: 5px solid black;
        cursor: pointer;
        transition: background-color 0.2s;
      }

      .square:last-child {
        border-right: none;
      }

      .square:nth-child(3n) {
        border-bottom: none;
      }

      .square:hover {
        background-color: #eee;
      }

      .x {
        color: red;
      }

      .o {
        color: blue;
      }

      .message {
        text-align: center;
        font-size: 50px;
        margin-top: 50px;
      }

      .reset-button {
        display: block;
        margin: 0 auto;
        padding: 10px;
        background-color: #fff;
        border: 5px solid black;
        border-radius: 10px;
        font-size: 20px;
        cursor: pointer;
        transition: background-color 0.2s;
      }

      .reset-button:hover {
        background-color: #eee;
      }
    </style>
  </head>
  <body>
    <div class="board">
      <div class="square"></div>
      <div class="square"></div>
      <div class="square"></div>
      <div class="square"></div>
      <div class="square"></div>
      <div class="square"></div>
      <div class="square"></div>
      <div class="square"></div>
      <div class="square"></div>
    </div>
    <div class="message">It's X's turn.</div>
    <script>
      // HTML elements
      const squares = document.querySelectorAll(".square");
      const message = document.querySelector(".message");

      // Game variables
      let playerX = true;
      let isGameOver = false;

      // Winning combinations
      const winningCombinations = [
        [0, 1, 2],
        [3, 4, 5],
        [6, 7, 8],
        [0, 3, 6],
        [1, 4, 7],
        [2, 5, 8],
        [0, 4, 8],
        [2, 4, 6],
      ];

      // Function to toggle between players
      function togglePlayer() {
        playerX = !playerX;
        message.textContent = `It's ${playerX ? "X" : "O"}'s turn`;
      }

      // Function to check for a winning combination
      function checkWinningCombination() {
        for (let i = 0; i < winningCombinations.length; i++) {
          const [a, b, c] = winningCombinations[i];
          if (
            squares[a].classList.contains("x") &&
            squares[b].classList.contains("x") &&
            squares[c].classList.contains("x")
          ) {
            message.textContent = "X wins!";
            isGameOver = true;
            return true;
          } else if (
            squares[a].classList.contains("o") &&
            squares[b].classList.contains("o") &&
            squares[c].classList.contains("o")
          ) {
            message.textContent = "O wins!";
            isGameOver = true;
            return true;
          }
        }
        return false;
      }

      // Function to handle square clicks
      function handleSquareClick(event) {
        const square = event.target;
        if (
          square.classList.contains("x") ||
          square.classList.contains("o") ||
          isGameOver
        ) {
          return;
        }
        const currentPlayer = playerX ? "x" : "o";
        square.classList.add(currentPlayer);
        if (checkWinningCombination()) {
          message.textContent = `${winningPlayer} wins!`;
          isGameOver = true;
          return;
        }
        if (
          [...squares].every(
            (square) =>
              square.classList.contains("x") || square.classList.contains("o")
          )
        ) {
          message.textContent = "It's a tie!";
          isGameOver = true;
          return;
        }
        togglePlayer();
      }

      // Add event listener to each square
      squares.forEach((square) => {
        square.addEventListener("click", handleSquareClick);
      });

      // Set initial message
      message.textContent = `It's ${playerX ? "X" : "O"}'s turn`;

      // Reset game function
      function resetGame() {
        squares.forEach((square) => {
          square.classList.remove("x", "o");
        });
        playerX = true;
        isGameOver = false;
        winningPlayer = null;
        message.textContent = `It's ${playerX ? "X" : "O"}'s turn`;
      }

      // Add event listener to reset button
      const resetButton = document.querySelector(".reset-button");
      resetButton.addEventListener("click", resetGame);

      // Add event listener to each square
      squares.forEach((square) => {
        square.addEventListener("click", handleSquareClick);
      });

      // Set initial message
      message.textContent = `It's ${playerX ? "X" : "O"}'s turn`;
    </script>
  </body>
</html>
